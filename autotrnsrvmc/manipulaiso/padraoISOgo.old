package manipulaiso

import (

	//"encoding/csv"

	"fmt"
	"os"

	"github.com/moov-io/iso8583"
	//"github.com/moov-io/iso8583/cmd/iso8583/describe"
	"github.com/moov-io/iso8583/encoding"
	"github.com/moov-io/iso8583/field"
	"github.com/moov-io/iso8583/padding"
	"github.com/moov-io/iso8583/prefix"
	//"github.com/moov-io/iso8583/specs"
)

func p_NewSpec() *iso8583.MessageSpec {
	return &iso8583.MessageSpec{
		Fields: map[int]field.Field{
			0: field.NewString(&field.Spec{
				Length:      6,
				Description: "MTI",
				Enc:         encoding.Binary,
				Pref:        prefix.ASCII.Fixed,
			}),
			1: field.NewBitmap(&field.Spec{
				Description: "Bitmap",
				Enc:         encoding.Binary,
				Pref:        prefix.Hex.Fixed,
			}),
			2: field.NewString(&field.Spec{
				Length:      16,
				Description: "PAN - CARTAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LL,
			}),
			3: field.NewNumeric(&field.Spec{
				Length:      6,
				Description: "CODIGO PROCESSAMENTO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			4: field.NewNumeric(&field.Spec{
				Length:      12,
				Description: "VALOR DA TRANSACAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			7: field.NewNumeric(&field.Spec{
				Length:      10,
				Description: "DATA HORA GMT TRANSMISSAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			11: field.NewNumeric(&field.Spec{
				Length:      6,
				Description: "DE011",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			12: field.NewNumeric(&field.Spec{
				Length:      6,
				Description: "HORA LOCAL TRANSACAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			13: field.NewNumeric(&field.Spec{
				Length:      4,
				Description: "DATA LOCAL TRANSACAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			14: field.NewNumeric(&field.Spec{
				Length:      4,
				Description: "VALIDADE",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			18: field.NewNumeric(&field.Spec{
				Length:      4,
				Description: "MCC",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			19: field.NewNumeric(&field.Spec{
				Length:      3,
				Description: "DE19",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			22: field.NewNumeric(&field.Spec{
				Length:      3,
				Description: "ENTRY MODE",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			23: field.NewNumeric(&field.Spec{
				Length:      3,
				Description: "DE23",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			24: field.NewNumeric(&field.Spec{
				Length:      3,
				Description: "DE24",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			32: field.NewString(&field.Spec{
				Length:      11,
				Description: "CODIGO ADQUIRENTE",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LL,
			}),
			35: field.NewString(&field.Spec{
				Length:      37,
				Description: "TRILHA 2",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LL,
			}),
			37: field.NewString(&field.Spec{
				Length:      12,
				Description: "NSU",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			38: field.NewNumeric(&field.Spec{
				Length:      6,
				Description: "CODIGO DE AUTORIZACAO",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			39: field.NewString(&field.Spec{
				Length:      2,
				Description: "CODIGO RESPOSTA",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			41: field.NewString(&field.Spec{
				Length:      8,
				Description: "TERMINAL",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
			}),
			42: field.NewString(&field.Spec{
				Length:      15,
				Description: "CODIGO DO EC",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
			}),
			43: field.NewString(&field.Spec{
				Length:      40,
				Description: "DADOS EC",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
			}),
			46: field.NewString(&field.Spec{
				Length:      999,
				Description: "Identificador do Cartao -CVE2",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			48: field.NewString(&field.Spec{
				Length:      999,
				Description: "Informacoes adicionais de solic resp",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			49: field.NewNumeric(&field.Spec{
				Length:      3,
				Description: "CODIGO DE MOEDA",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.Fixed,
				Pad:         padding.Left('0'),
			}),
			52: field.NewString(&field.Spec{
				Length:      16,
				Description: "SENHA CRIPTOGRAFADA",
				Enc:         encoding.Binary,
				Pref:        prefix.ASCII.Fixed,
			}),
			58: field.NewString(&field.Spec{
				Length:      60,
				Description: "DE58",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			60: field.NewString(&field.Spec{
				Length:      14,
				Description: "DE60",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			62: field.NewString(&field.Spec{
				Length:      999,
				Description: "Dados para Identificar",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			//	124: field.NewString(&field.Spec{
			//		Length:      124,
			//		Description: "DE124",
			//		Enc:         encoding.ASCII,
			//		Pref:        prefix.ASCII.LLL,
			//	}),
			126: field.NewString(&field.Spec{
				Length:      999,
				Description: "Identificador do Cartao -CVE2",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
			127: field.NewString(&field.Spec{
				Length:      999,
				Description: "DE127",
				Enc:         encoding.ASCII,
				Pref:        prefix.ASCII.LLL,
			}),
		},
	}

}

func Padraoiso(iso_padrao []byte) ([]byte, error) {

	// 1 se renomeia a iso criada acima com pacote iso_padrao

	fmt.Println("PRINT DA FUNCAO MC", iso_padrao)

	retorno := string(iso_padrao)

	p_spec := p_NewSpec()

	p_message := iso8583.NewMessage(p_spec)

	p_message.Unpack([]byte((retorno)))

	d, err := p_message.Pack()
	if err != nil {
		panic(err)

		//iso8583.Describe(r_message, os.Stdout)
	}
	fmt.Printf("\n MENSAGEM RECEBIDA:\n")
	fmt.Printf("% x\n", d)
	iso8583.Describe(p_message, os.Stdout)
	p_message.Unpack(d)
	pan, err := p_message.GetString(2)
	fmt.Println(string(pan))
	if err != nil {
		panic(err)

	}

	//for err == nil {
	//	retorno := string(iso_padrao)

	//	r_spec := r_NewSpec()

	//	r_message := iso8583.NewMessage(r_spec)

	//	r_message.Unpack([]byte(string(retorno)))

	//	d, err := r_message.Pack()
	//	if err != nil {
	//	panic(err)

	//iso8583.Describe(r_message, os.Stdout)
	//	}
	//	fmt.Printf("\n MENSAGEM RECEBIDA:\n")
	//	fmt.Printf("% x\n", d)
	//iso8583.Describe(r_message, os.Stdout)
	//r_message.Unpack(d)
	//	pan, err := r_message.GetString(2)
	//	fmt.Printf(pan)

	//}

	fmt.Printf("\n FIM DO PROCESSAMENTO :) \n")
	//fmt.Println("Pressione 'Enter' para sair...")
	//fmt.Scanln()
	//conn.Close()
	return d, err
}

//}
